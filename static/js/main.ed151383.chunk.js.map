{"version":3,"sources":["components/drawer/DrawerComponent.js","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","display","flexDirection","alignItems","justifyContent","padding","spacing","height","nestedDrawerItems","paddingLeft","DrawerComponent","props","classes","ColorModeContext","useTheme","colorMode","useContext","useState","openSettings","setOpenSettings","selectedDrawerItem","setSelectedDrawerItem","drawerItems","icon","PersonOutline","label","name","url","Code","AlternateEmail","moreSubItems","HelpOutline","Drawer","variant","anchor","className","paper","Paper","elevation","square","Box","Typography","style","fontWeight","paddingTop","List","map","item","index","ListItem","button","selected","component","Link","to","onClick","ListItemIcon","ListItemText","primary","Divider","Tune","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","toggleColorMode","palette","type","Brightness4","Brightness7","capitalize","createContext","root","AppContent","CssBaseline","path","element","App","themeMode","setThemeMode","useMemo","prevMode","mainTheme","createTheme","Fragment","Provider","value","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed151383.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Collapse, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, Paper, Typography } from '@material-ui/core';\r\nimport { AlternateEmail as AlternateEmailIcon, Brightness4 as Brightness4Icon, Brightness7 as Brightness7Icon, Code as CodeIcon, ExpandLess as ExpandLessIcon, ExpandMore as ExpandMoreIcon, HelpOutline as HelpOutlineIcon, List as ListIcon, PersonOutline as PersonOutlineIcon, Tune as TuneIcon } from '@material-ui/icons';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { capitalize, map } from 'lodash';\r\n\r\n// import profilePicture from './images/profile.jpg';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(2),\r\n    height: 260,\r\n    // backgroundImage: `url(${profilePicture})`,\r\n    // backgroundSize: 'cover',\r\n    // backgroundPosition: 'center',\r\n    // backgroundRepeat: 'no-repeat',\r\n  },\r\n  nestedDrawerItems: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst DrawerComponent = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { ColorModeContext } = props;\r\n  \r\n  const theme = useTheme();\r\n  const colorMode = useContext(ColorModeContext);\r\n  \r\n  const [ openSettings, setOpenSettings ] = useState(false);\r\n  const [ selectedDrawerItem, setSelectedDrawerItem ] = useState('about');\r\n\r\n  const drawerItems = [\r\n    {\r\n      icon: <PersonOutlineIcon />,\r\n      label: 'About',\r\n      name: 'about',\r\n      url: '/portfolio',\r\n    },\r\n    {\r\n      icon: <ListIcon />,\r\n      label: 'Skills',\r\n      name: 'skills',\r\n      url: '/skills',\r\n    },\r\n    {\r\n      icon: <CodeIcon />,\r\n      label: 'Works',\r\n      name: 'works',\r\n      url: '/works',\r\n    },\r\n    {\r\n      icon: <AlternateEmailIcon />,\r\n      label: 'Contact',\r\n      name: 'contact',\r\n      url: '/contact',\r\n    },\r\n  ];\r\n\r\n  const moreSubItems = [\r\n    {\r\n      icon: <HelpOutlineIcon />,\r\n      label: 'About this site',\r\n      name: 'site_info',\r\n      url: '/site_info',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <Paper variant=\"elevation\" elevation={2} square>\r\n        <Box className={classes.toolbar}>\r\n          <Typography variant=\"h5\">Christian Arvie</Typography>\r\n          <Typography variant=\"h4\" style={{ fontWeight: 'bold' }}>Benito</Typography>\r\n          <Typography variant=\"caption\" style={{ paddingTop: 15 }}>Web Developer</Typography>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <List>\r\n        {\r\n          map(drawerItems, (item, index) => {\r\n            return (\r\n              <ListItem button selected={item.name === selectedDrawerItem} key={`item-${item.name}-${index}`} component={Link} to={item.url} onClick={() => setSelectedDrawerItem(item.name)}>\r\n                <ListItemIcon>{ item.icon }</ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItem>\r\n            );\r\n          })\r\n        }\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        <ListItem button onClick={() => setOpenSettings(!openSettings)}>\r\n          <ListItemIcon><TuneIcon /></ListItemIcon>\r\n          <ListItemText primary=\"More\" />\r\n          { openSettings ? <ExpandLessIcon /> : <ExpandMoreIcon /> }\r\n        </ListItem>\r\n\r\n        <Collapse in={openSettings} timeout=\"auto\" unmountOnExit>\r\n          <List disablePadding>\r\n            {\r\n              map(moreSubItems, (item, index) => {\r\n                return (\r\n                  <ListItem button selected={item.name === selectedDrawerItem} key={`item-${item.name}-${index}`} component={Link} to={item.url} onClick={() => setSelectedDrawerItem(item.name)} className={classes.nestedDrawerItems}>\r\n                    <ListItemIcon>{ item.icon }</ListItemIcon>\r\n                    <ListItemText primary={item.label} />\r\n                  </ListItem>\r\n                );\r\n              })\r\n            }\r\n            \r\n            <ListItem button className={classes.nestedDrawerItems} onClick={colorMode.toggleColorMode}>\r\n              <ListItemIcon>{ theme.palette.type === 'light' ? <Brightness4Icon /> : <Brightness7Icon /> }</ListItemIcon>\r\n              <ListItemText primary={`${capitalize(theme.palette.type === 'light' ? 'dark' : 'light')} mode`} />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default DrawerComponent;","import React, { createContext, useMemo, useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Box, CssBaseline, Typography } from '@material-ui/core';\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\nimport DrawerComponent from './components/drawer/DrawerComponent';\n\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n  },\n}));\n\nconst AppContent = () => {\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter>\n      <Box className={classes.root}>\n        <CssBaseline />\n\n        <DrawerComponent ColorModeContext={ColorModeContext} />\n\n        <main>\n          <Routes>\n            <Route path=\"/portfolio\" element={<Typography variant=\"h2\">About</Typography>} />\n            <Route path=\"/skills\" element={<Typography variant=\"h2\">Skills</Typography>} />\n            <Route path=\"/works\" element={<Typography variant=\"h2\">Works</Typography>} />\n            <Route path=\"/contact\" element={<Typography variant=\"h2\">Contact</Typography>} />\n            <Route path=\"/site_info\" element={<Typography variant=\"h2\">About this site</Typography>} />\n          </Routes>\n        </main>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nconst App = () => {\n  const [ themeMode, setThemeMode ] = useState({ type: 'light' });\n\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => {\n      setThemeMode((prevMode) => (prevMode.type === 'light' ? { type: 'dark' } : { type: 'light' }));\n    },\n  }), [],);\n\n  const mainTheme = useMemo(() => createTheme({\n    palette: {\n      ...themeMode,\n    },\n  }), [themeMode],);\n  \n  return (\n    <React.Fragment>\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={mainTheme}>\n          <AppContent />\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}