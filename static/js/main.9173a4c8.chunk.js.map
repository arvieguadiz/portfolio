{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","flexDirection","alignItems","justifyContent","padding","spacing","height","backgroundColor","deepOrange","color","App","classes","drawerItems","icon","Person","label","url","ViewList","Code","Email","Fragment","ThemeProvider","Box","className","CssBaseline","Drawer","variant","anchor","paper","Typography","style","fontWeight","paddingTop","List","map","item","index","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAAe,I,YCWTA,EAAc,IAEdC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,MAAM,eAAD,OAAiBP,EAAjB,OACLQ,WAAYR,GAEdS,OAAQ,CACNF,MAAOP,EACPU,WAAY,GAEdC,YAAa,CACXJ,MAAOP,GAETY,QAAS,CACPP,QAAS,OACTQ,cAAe,SACfC,WAAY,WACZC,eAAgB,WAChBC,QAASb,EAAMc,QAAQ,GACvBC,OAAQ,IACRC,gBAAiBC,IAAU,KAC3BC,MAAO,YAgGIC,EA5FH,WACV,IAAMC,EAAUtB,IAEVuB,EAAc,CAClB,CACEC,KAAM,cAACC,EAAA,EAAD,IACNC,MAAO,QACPC,IAAK,cAEP,CACEH,KAAM,cAACI,EAAA,EAAD,IACNF,MAAO,SACPC,IAAK,WAEP,CACEH,KAAM,cAACK,EAAA,EAAD,IACNH,MAAO,QACPC,IAAK,UAEP,CACEH,KAAM,cAACM,EAAA,EAAD,IACNJ,MAAO,UACPC,IAAK,aAIT,OAkBE,aAjBA,CAiBC,IAAMI,SAAP,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,CAAKC,UAAWZ,EAAQnB,KAAxB,UACE,cAACgC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,OAAO,OACPJ,UAAWZ,EAAQd,OACnBc,QAAS,CACPiB,MAAOjB,EAAQZ,aALnB,UAQE,eAACuB,EAAA,EAAD,CAAKC,UAAWZ,EAAQX,QAAxB,UACE,cAAC6B,EAAA,EAAD,CAAYH,QAAQ,KAApB,6BACA,cAACG,EAAA,EAAD,CAAYH,QAAQ,KAAKI,MAAO,CAAEC,WAAY,QAA9C,oBACA,cAACF,EAAA,EAAD,CAAYH,QAAQ,UAAUI,MAAO,CAAErB,MAAO,OAAQuB,WAAY,IAAlE,8BAGF,cAACC,EAAA,EAAD,UAEIC,cAAItB,GAAa,SAACuB,EAAMC,GACtB,OACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAA2BC,UAAWC,IAAMC,GAAIN,EAAKnB,IAArE,UACE,cAAC0B,EAAA,EAAD,UAAgBP,EAAKtB,OACrB,cAAC8B,EAAA,EAAD,CAAcC,QAAST,EAAKpB,UAF9B,cAA6BoB,EAAKpB,gBAU5C,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,KAAK,aAAaC,QAAS,cAACjB,EAAA,EAAD,CAAYH,QAAQ,KAApB,qBAClC,cAAC,IAAD,CAAOmB,KAAK,UAAUC,QAAS,cAACjB,EAAA,EAAD,CAAYH,QAAQ,KAApB,sBAC/B,cAAC,IAAD,CAAOmB,KAAK,SAASC,QAAS,cAACjB,EAAA,EAAD,CAAYH,QAAQ,KAApB,qBAC9B,cAAC,IAAD,CAAOmB,KAAK,WAAWC,QAAS,cAACjB,EAAA,EAAD,CAAYH,QAAQ,KAApB,sCC9GjCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9173a4c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport { Box, CssBaseline, Drawer, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { Code as CodeIcon, Email as EmailIcon, Person as PersonIcon, ViewList as ViewListIcon } from '@material-ui/icons';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { deepOrange } from '@material-ui/core/colors';\nimport { map } from 'lodash';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(2),\n    height: 240,\n    backgroundColor: deepOrange['A200'],\n    color: '#fff',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const drawerItems = [\n    {\n      icon: <PersonIcon />,\n      label: 'About',\n      url: '/portfolio',\n    },\n    {\n      icon: <ViewListIcon />,\n      label: 'Skills',\n      url: '/skills',\n    },\n    {\n      icon: <CodeIcon />,\n      label: 'Works',\n      url: '/works',\n    },\n    {\n      icon: <EmailIcon />,\n      label: 'Contact',\n      url: '/contact',\n    },\n  ];\n  \n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    \n    <React.Fragment>\n      <ThemeProvider>\n        <BrowserRouter>\n          <Box className={classes.root}>\n            <CssBaseline />\n            <Drawer\n              variant=\"permanent\"\n              anchor=\"left\"\n              className={classes.drawer}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <Box className={classes.toolbar}>\n                <Typography variant=\"h5\">Christian Arvie</Typography>\n                <Typography variant=\"h4\" style={{ fontWeight: 'bold' }}>Benito</Typography>\n                <Typography variant=\"caption\" style={{ color: '#000', paddingTop: 15 }}>Web Developer</Typography>\n              </Box>\n\n              <List>\n                {\n                  map(drawerItems, (item, index) => {\n                    return (\n                      <ListItem button key={`item${item.label}`} component={Link} to={item.url}>\n                        <ListItemIcon>{ item.icon }</ListItemIcon>\n                        <ListItemText primary={item.label} />\n                      </ListItem>\n                    );\n                  })\n                }\n              </List>\n            </Drawer>\n\n            <main>\n              <Routes>\n                <Route path=\"/portfolio\" element={<Typography variant=\"h2\">About</Typography>} />\n                <Route path=\"/skills\" element={<Typography variant=\"h2\">Skills</Typography>} />\n                <Route path=\"/works\" element={<Typography variant=\"h2\">Works</Typography>} />\n                <Route path=\"/contact\" element={<Typography variant=\"h2\">Contact</Typography>} />\n              </Routes>\n            </main>\n          </Box>\n        </BrowserRouter>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}